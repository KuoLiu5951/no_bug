---
left_side_image: "assist.jpeg"
title:  "Publications of PLaSS and Mike Bond"
content_list:
    - title: "Rethinking Support for Region Conflict Exceptions"
      authors:
        - name: "Swarnendu Biswas"
          link: "https://www.cse.iitk.ac.in/users/swarnendu/"
        - name: "Rui Zhang"
          link: ""
        - name: "Michael D. Bond"
          link: "http://www.cse.ohio-state.edu/~mikebond/"
        - name: "Brandon Lucia"
          link: "https://brandonlucia.com/"
      periodical:
          text: "IEEE International Parallel and Distributed Processing Symposium (IPDPS 2019), Rio de Janeiro, Brazil, May 2019"
          link_text: ""
          link: ""
      papers:
          - text: "PDF"
            link: "http://web.cse.ohio-state.edu/~mikebond/arc-ipdps-2019.pdf"
      source_code: 
          link: "https://github.com/PLaSSticity/ce-arc-simulator-ipdps19"
      abstracts: 
        - "Current shared-memory systems provide well-defined execution semantics only for data-race-free executions. A state-of-the-art technique called Conflict Exceptions (CE) extends M(O)ESI-based coherence to provide defined semantics to all program executions. However, CE incurs significant performance costs because of its need to frequently access metadata in memory."
        - "In this work, we explore designs for practical architecture support for region conflict exceptions. First, we propose an on-chip metadata cache called access information memory (AIM) to reduce memory accesses in CE. The extended design is called CE+. In spite of the AIM, CE+ stresses or saturates the on-chip interconnect and the off-chip memory network bandwidth because of its reliance on eager write-invalidation-based coherence. We explore whether detecting conflicts is potentially better suited to cache coherence based on release consistency and self-invalidation, rather than M(O)ESI-based coherence. We realize this insight in a novel architecture design called ARC."
        - "Our evaluation shows that CE+ improves the run-time performance and energy usage over CE for several applications across different core counts, but can suffer performance penalties from network saturation. ARC generally outperforms CE, and is competitive with CE+ on average while stressing the on-chip interconnect and off-chip memory network much less, showing that coherence based on release consistency and self-invalidation is well suited to detecting region conflicts."

---

<div class = "div_papers">

    <div class="left_side_img"> 
        <%= image_tag current_page.data.left_side_image %>
    </div>

   
     <div class="content">

     <h2> <%= current_page.data.title%> </h2>
     <hr>

      
      <% current_page.data.content_list.each do |f| %>

        <h3> <%= f.title%> </h3>

        <!-- authors -->
         <p>
            <% f.authors.each do |item| %>
               <% if item == f.authors.last() %>
                    and 
                <% end %>
                <% if item.link != "" %>
                    <%= link_to item.name,item.link %>
                <% else %>
                    <%= item.name %>
                <% end %>
                <% if item != f.authors.last() %>
                    ,
                <% end %>
            <% end %>
        </p>

        <p>
            <% if f.periodical.link != "" %>
                <%= f.periodical.text.split(f.periodical.link_text)[0]%>
                <%= link_to f.periodical.link_text,f.periodical.link %>
                <%= f.periodical.text.split(f.periodical.link_text)[1]%>
            <% else %>
                <%= f.periodical.text %>
            <% end %> 
        </p>

        <p>
            <b>Paper: </b>

            <% f.papers.each do |item| %>
                <% if item.link != "" %>
                    <%= link_to item.text,item.link %>
                <% end %> 
            <% end %> 
        </p>




        <p>
            <b> Source code: </b>
            Available at  <h3>  <%= link_to f.source_code.link, f.source_code.link %>  </h3>
        <p>

        <p> <b> Abstract: </b> </p>

        <% f.abstracts.each do |item| %>
            <p> 
                <%= item %>
            </p>
        <% end %>
        <hr>
      <% end %>
      
      
    </div> 


</div>


